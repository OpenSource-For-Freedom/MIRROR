name: ci

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: tag-release-main
  cancel-in-progress: false

jobs:
  tag_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (full history)
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 #v5
        with:
          fetch-depth: 0

      - name: Ensure tags are present
        run: git fetch --tags --force

      - name: Compute next tag (+0.01)
        id: version
        shell: bash
        run: |
          set -euo pipefail

          # Gather tags and pick the latest by *version
          # Supports "1.23" and "v1.23" with up to 2 decimal places, i could improve to 3
          latest_tag="$(git tag -l | grep -E '^(v)?[0-9]+(\.[0-9]{1,2})?$' | sort -V | tail -n1 || true)"

          # defauly values
          prefix=""
          int_part=0
          frac_part="00"

          if [[ -n "${latest_tag}" ]]; then
            if [[ "${latest_tag}" =~ ^(v)?([0-9]+)(?:\.([0-9]{1,2}))?$ ]]; then
              [[ -n "${BASH_REMATCH[1]}" ]] && prefix="v"
              int_part="${BASH_REMATCH[2]}"
              frac_part="${BASH_REMATCH[3]:-00}"
              # normalize frac to two digits
              frac_part="$(printf '%02d\n' "$((10#${frac_part}))")"
            fi
          fi

          # Convert to "integer cents"  and bump by 1 (== 0.01)
          cents=$(( 10#${int_part} * 100 + 10#${frac_part} ))
          cents=$(( cents + 1 ))

          new_int=$(( cents / 100 ))
          new_frac=$(printf '%02d' $(( cents % 100 )))
          new_tag="${prefix}${new_int}.${new_frac}"

          # Learned about bash integeres and the number bump had to follow "cents + 1" not just .1))
          while git rev-parse -q --verify "refs/tags/${new_tag}" >/dev/null; do
            cents=$(( cents + 1 ))
            new_int=$(( cents / 100 ))
            new_frac=$(printf '%02d' $(( cents % 100 )))
            new_tag="${prefix}${new_int}.${new_frac}"
          done

          echo "latest_tag=${latest_tag:-none}"
          echo "new_tag=${new_tag}"
          echo "new_tag=${new_tag}" >> "$GITHUB_OUTPUT"

      - name: Configure Git identity
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Create and push tag
        shell: bash
        run: |
          set -euo pipefail
          tag="${{ steps.version.outputs.new_tag }}"
          git tag -a "$tag" -m "Release $tag"
          git push origin "$tag"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 #v2.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.new_tag }}
          name: ${{ steps.version.outputs.new_tag }}
          generate_release_notes: true
